Part 1:
1.
db.customers.insertMany([
  {
    _id: ObjectId("64a98c5f0bcf1d0000a12345"),
    name: "Rahul Sharma",
    email: "rahul.sharma@example.com",
    address: { street: "10 MG Road", city: "Bengaluru", zipcode: "560001" },
    phone: "9876543210",
    registration_date: ISODate("2023-01-01T12:00:00Z")
  },
  {
    _id: ObjectId("64a98c5f0bcf1d0000a12346"),
    name: "Priya Verma",
    email: "priya.verma@example.com",
    address: { street: "22 Park Street", city: "Kolkata", zipcode: "700016" },
    phone: "8765432109",
    registration_date: ISODate("2023-02-01T10:00:00Z")
  },
  {
    _id: ObjectId("64a98c5f0bcf1d0000a12347"),
    name: "Amit Patel",
    email: "amit.patel@example.com",
    address: { street: "15 Marine Drive", city: "Mumbai", zipcode: "400020" },
    phone: "7654321098",
    registration_date: ISODate("2023-03-01T14:30:00Z")
  },
  {
    _id: ObjectId("64a98c5f0bcf1d0000a12348"),
    name: "Sonia Gupta",
    email: "sonia.gupta@example.com",
    address: { street: "47 Connaught Place", city: "Delhi", zipcode: "110001" },
    phone: "6543210987",
    registration_date: ISODate("2023-04-01T11:45:00Z")
  },
  {
    _id: ObjectId("64a98c5f0bcf1d0000a12349"),
    name: "Rajesh Nair",
    email: "rajesh.nair@example.com",
    address: { street: "30 MG Road", city: "Chennai", zipcode: "600002" },
    phone: "5432109876",
    registration_date: ISODate("2023-05-01T16:00:00Z")
  }
]);

// Insert orders into the orders collection
db.orders.insertMany([
  {
    _id: ObjectId("64a98c5f0bcf1d0000b12345"),
    order_id: "ORD123456",
    customer_id: ObjectId("64a98c5f0bcf1d0000a12345"),
    order_date: ISODate("2023-05-15T14:00:00Z"),
    status: "shipped",
    items: [
      { product_name: "Laptop", quantity: 1, price: 75000 },
      { product_name: "Mouse", quantity: 2, price: 1500 }
    ],
    total_value: 78000
  },
  {
    _id: ObjectId("64a98c5f0bcf1d0000b12346"),
    order_id: "ORD123457",
    customer_id: ObjectId("64a98c5f0bcf1d0000a12346"),
    order_date: ISODate("2023-06-01T11:30:00Z"),
    status: "processing",
    items: [
      { product_name: "Smartphone", quantity: 1, price: 30000 },
      { product_name: "Headphones", quantity: 1, price: 2000 }
    ],
    total_value: 32000
  },
  {
    _id: ObjectId("64a98c5f0bcf1d0000b12347"),
    order_id: "ORD123458",
    customer_id: ObjectId("64a98c5f0bcf1d0000a12347"),
    order_date: ISODate("2023-06-10T09:45:00Z"),
    status: "shipped",
    items: [
      { product_name: "Tablet", quantity: 1, price: 25000 },
      { product_name: "Keyboard", quantity: 1, price: 1500 }
    ],
    total_value: 26500
  },
  {
    _id: ObjectId("64a98c5f0bcf1d0000b12348"),
    order_id: "ORD123459",
    customer_id: ObjectId("64a98c5f0bcf1d0000a12348"),
    order_date: ISODate("2023-06-15T15:20:00Z"),
    status: "delivered",
    items: [
      { product_name: "Monitor", quantity: 1, price: 12000 },
      { product_name: "HDMI Cable", quantity: 1, price: 500 }
    ],
    total_value: 12500
  },
  {
    _id: ObjectId("64a98c5f0bcf1d0000b12349"),
    order_id: "ORD123460",
    customer_id: ObjectId("64a98c5f0bcf1d0000a12349"),
    order_date: ISODate("2023-06-20T13:15:00Z"),
    status: "processing",
    items: [
      { product_name: "Printer", quantity: 1, price: 10000 },
      { product_name: "Paper", quantity: 5, price: 300 }
    ],
    total_value: 11500
  }
]);

2.
db.customers.aggregate([
  // Match the customer with the name "John Doe"
  { $match: { name: "John Doe" } },

  // Use $lookup to find orders for this customer
  {
    $lookup: {
      from: "orders",             // Collection to join (orders)
      localField: "_id",           // Field from customers collection
      foreignField: "customer_id", // Field from orders collection
      as: "orders"                 // Name of the output array field
    }
  },

  {
    $project: {
      _id: 0,
      name: 1,
      email: 1,
      "orders.order_id": 1,
      "orders.order_date": 1,
      "orders.status": 1,
      "orders.total_value": 1
    }
  }
]);

3.
db.orders.aggregate([
  // Match the customer with the name "John Doe"
  { $match: { order_id: "ORD123456" } },

  // Use $lookup to find orders for this customer
  {
    $lookup: {
      from: "customers",             
      localField: "customer_id",           
      foreignField: "_id", 
      as: "customers"                 
    }
  },

  {
    $project: {
      "customers._id": 0,
      "customers.name": 1,
      "customers.email": 1,
    }
  }
]);

4.
db.orders.updateOne(
  { order_id: "ORD123456" }, 
  { $set: { status: "delivered" } } 
);

5.db.orders.deleteOne({order_id:"ORD123456"})

Part 2:
1.
db.orders.aggregate([
  {
    $lookup: {
      from: "customers",
      localField: "customer_id",
      foreignField: "_id",
      as: "customer_info"
    }
  },
  { $unwind: "$customer_info" },
  {
    $group: {
      _id: "$customer_info.name",
      total_order_value: { $sum: "$total_value" }
    }
  },
  {
    $project: {
      _id: 0,
      customer_name: "$_id",
      total_order_value: 1
    }
  }
]);

2.
db.orders.aggregate([
  {
    $group: {
      _id: "$status",
      order_count: { $sum: 1 }
    }
  },
  {
    $project: {
      _id: 0,
      status: "$_id",
      order_count: 1
    }
  }
]);

3.
db.orders.aggregate([
  {
    $lookup: {
      from: "customers",
      localField: "customer_id",
      foreignField: "_id",
      as: "customer_info"
    }
  },
  { $unwind: "$customer_info" },
  {
    $sort: { "order_date": -1 }
  },
  {
    $group: {
      _id: "$customer_id",
      customer_name: { $first: "$customer_info.name" },
      email: { $first: "$customer_info.email" },
      recent_order: { $first: { order_id: "$order_id", total_value: "$total_value", order_date: "$order_date" } }
    }
  },
  {
    $project: {
      _id: 0,
      customer_name: 1,
      email: 1,
      recent_order: 1
    }
  }
]);

4.
db.orders.aggregate([
  {
    $lookup: {
      from: "customers",
      localField: "customer_id",
      foreignField: "_id",
      as: "customer_info"
    }
  },
  { $unwind: "$customer_info" },
  {
    $sort: { total_value: -1 }
  },
  {
    $group: {
      _id: "$customer_id",
      customer_name: { $first: "$customer_info.name" },
      most_expensive_order: { $first: { order_id: "$order_id", total_value: "$total_value" } }
    }
  },
  {
    $project: {
      _id: 0,
      customer_name: 1,
      most_expensive_order: 1
    }
  }
]);

part 3:

1.

db.orders.aggregate([
  {
    $match: {
      order_date: { $gte: new ISODate(new Date().setDate(new Date().getDate() - 30)) }
    }
  },
  {
    $lookup: {
      from: "customers",
      localField: "customer_id",
      foreignField: "_id",
      as: "customer_info"
    }
  },
  { $unwind: "$customer_info" },
  {
    $group: {
      _id: "$customer_id",
      customer_name: { $first: "$customer_info.name" },
      email: { $first: "$customer_info.email" },
      most_recent_order_date: { $max: "$order_date" }
    }
  },
  {
    $project: {
      _id: 0,
      customer_name: 1,
      email: 1,
      most_recent_order_date: 1
    }
  }
]);

2.
db.orders.aggregate([
  {
    $lookup: {
      from: "customers",
      localField: "customer_id",
      foreignField: "_id",
      as: "customer_info"
    }
  },
  { $unwind: "$customer_info" },
  { $match: { "customer_info.name": "John Doe" } },
  {
    $unwind: "$items"
  },
  {
    $group: {
      _id: "$items.product_name",
      total_quantity: { $sum: "$items.quantity" }
    }
  },
  {
    $project: {
      _id: 0,
      product_name: "$_id",
      total_quantity: 1
    }
  }
]);

3.
db.orders.aggregate([
  {
    $group: {
      _id: "$customer_id",
      total_spent: { $sum: "$total_value" }
    }
  },
  {
    $sort: { total_spent: -1 }
  },
  { $limit: 3 },
  {
    $lookup: {
      from: "customers",
      localField: "_id",
      foreignField: "_id",
      as: "customer_info"
    }
  },
  { $unwind: "$customer_info" },
  {
    $project: {
      _id: 0,
      customer_name: "$customer_info.name",
      total_spent: 1
    }
  }
]);

4.

db.customers.findOne({ name: "Jane Smith" }, function(err, customer) {
  if (err) throw err;
  db.orders.insertOne({
    order_id: "ORD123457",
    customer_id: customer._id,
    order_date: new Date(),
    status: "pending",
    items: [
      { product_name: "Smartphone", quantity: 1, price: 500 },
      { product_name: "Headphones", quantity: 1, price: 100 }
    ],
    total_value: 600
  });
});









